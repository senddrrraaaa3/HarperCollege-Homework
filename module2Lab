#include <iostream>
using namespace std;


int naivePower(int x, int n) {
    if (x == 0) return 0;
    if (n == 0) return 1;
    return x * naivePower(x, n - 1);
}


int unoptimizedDCPower(int x, int n) {
    if (x == 0) return 0;
    if (n == 0) return 1;
    if (n % 2 == 0) {
        return unoptimizedDCPower(x, n / 2) * unoptimizedDCPower(x, n / 2);
    } else {
        return x * unoptimizedDCPower(x, n / 2) * unoptimizedDCPower(x, n / 2);
    }
}


int optimizedDCPower(int x, int n) {
    if (x == 0) return 0;
    if (n == 0) return 1;
    int temp = optimizedDCPower(x, n / 2);
    if (n % 2 == 0) {
        return temp * temp;
    } else {
        return x * temp * temp;
    }
}

int main() {
    int x = 2;
    int n = 3;

    cout << "naivePower(" << x << ", " << n << ") == " << naivePower(x, n) << ";" << endl;
    cout << "unoptimizedDCPower(" << x << ", " << n << ") == " << unoptimizedDCPower(x, n) << ";" << endl;
    cout << "optimizedDCPower(" << x << ", " << n << ") == " << optimizedDCPower(x, n) << ";" << endl;

    return 0;
}

