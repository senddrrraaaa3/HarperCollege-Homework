#include <iostream>
#include <vector>
using namespace std;


int gSequence(int n, vector<int>& memo) {
    // Base case: G(0) = 0
    if (n == 0) {
        return 0;
    }
    if (memo[n] != -1) {
        return memo[n];
    }
    int result = n - gSequence(gSequence(n - 1, memo), memo);
    memo[n] = result;

    return result;
}

int main() {
    int n;

    
    cout << "Enter a non-negative integer: ";
    cin >> n;


    if (n < 0) {
        cout << "Please enter a non-negative integer." << endl;
        return 1;
    }
    vector<int> memo(n + 1, -1);
    memo[0] = 0;

    // Print G(n)
    cout << "gSequence(" << n << ") = " << gSequence(n, memo) << endl;
    cout << "\nFirst " << n + 1 << " terms of the Hofstadter G sequence:\n";
    for (int i = 0; i <= n; i++) {
        cout << "gSequence(" << i << ") = " << gSequence(i, memo) << endl;
    }

    return 0;
}

